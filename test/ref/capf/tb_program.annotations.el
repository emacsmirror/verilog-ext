(((1782 "ta")
  ("<mod>" "<t>" "<t>" "ucontroller" "tb_program" "tb_clocks" "<mod>" "<t>" "<t>" "logic [7:0]" "<t>" "<t>" "<mod>" "<t>" "<mod>" "<mod>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "local_parameter_declaration" "<t>" "<t>" "logic [11:0]" "<mod>" "<mod>" "<mod>" "<t>" "input logic [7:0]" "bin2bcd" nil "<mod>" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input alu_op" "<t>" "input logic[7:0]" "input alu_op" "local_parameter_declaration" "<t>" "uart" "local_parameter_declaration" "parameter_declaration" "parameter_declaration" "reg" "wire" "reg" "wire" "reg" "wire" "tri1" "text_macro_definition" "FDPE" "LUT2" "wire" "FDPE" "wire" nil "FDPE" nil nil nil nil nil nil "SRL16E" nil nil nil "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" nil nil "input logic [7:0]" nil nil "FDRE" nil nil nil "LUT1" "LUT1" "LUT1" "LUT1" "wire" "wire" "wire" "wire" nil "wire" "LUT2" nil nil nil nil "fifo_generator_0_fifo_generator_top" "fifo_generator_0_builtin_top_v6" "fifo_generator_0_reset_builtin" "<mod>" "fifo_generator_0_fifo_generator_v13_2_3_synth" "<mod>" nil "VCC" nil "GND" nil nil "fifo_generator_0_fifo_generator_v13_2_3_builtin" "<mod>" "<mod>" "fifo_generator_0_builtin_extdepth_v6" "<mod>" "wire" nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil "wire" nil "wire" nil "FIFO18E1" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" "LUT1" "wire" "LUT1" "wire" "LUT1" "wire" nil nil "LUT1" nil nil "fifo_generator_0_builtin_prim_v6" "<mod>" nil nil "wire" "<mod>" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil nil nil nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "fifo_generator_0_fifo_generator_v13_2_3" "<mod>" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "<mod>" "ram" "<mod>" "ram_arbiter" "uart" "<mod>" "dma" "<mod>" "alu" "<mod>" "logic" "logic [7:0]" "cpu" "<mod>" "logic" "logic [7:0]" "enum_name_declaration" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "logic [31:0]" "enum_name_declaration" "logic" "logic" "logic" "logic" "logic [31:0]" "enum_name_declaration" "logic" "local_parameter_declaration" "logic [31:0]" "logic" "logic [7:0]" "fifo_wrapper" "logic [7:0]" "sreg" "<mod>" "logic" "output logic" "output logic" "logic" "uart_rx" "<mod>" "logic" "logic" "output logic" "logic [7:0]" "input logic [7:0]" "uart_tx" "local_parameter_declaration" "local_parameter_declaration" "<mod>" "output logic [7:0]" "logic [7:0]" nil nil nil "local_parameter_declaration" "logic [31:0]" nil "logic" "logic [7:0]" "logic" "bin2bcd" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "<mod>" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "input logic" "enum_name_declaration" "input logic" "input logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum logic {REGS, GP}" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "regs_ram" "<mod>" "logic [7:0]" "logic" "gp_ram" "<mod>" "logic [7:0]" "local_parameter_declaration" "<mod>" "logic" "wire" "logic" "wire" "input logic [7:0]" "wire" "input logic" "wire" "input logic" "wire" "input logic" "wire" "wire" "wire" "fifo_generator_0" "<mod>" "local_parameter_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "output logic" "output logic" "logic" "input logic" "logic" "dma_arbiter" "<mod>" "input logic" "logic" "output logic" "input logic" "logic" "input logic [7:0]" "wire" "wire" "wire" "input logic" "output logic" "logic" "dma_rx" "<mod>" "logic" "output logic" "input logic" "logic" "logic" "input logic" "logic" "logic [7:0]" "logic" "input logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic [7:0]" "logic" "input logic" "dma_tx" "<mod>" "logic [7:0]" "logic" "logic [11:0]" "logic [11:0]" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic" "logic" "<t>" "logic [7:0]" "logic [7:0]" "logic" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "logic [7:0]" "logic" "logic" "local_parameter_declaration" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "<t>" "local_parameter_declaration" "logic [11:0]" "local_parameter_declaration" "<t>" "logic" "<t>" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "<t>" "enum_name_declaration" "logic [11:0]" "input logic [7:0]" "logic" "logic" "<t>" "state_t" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [11:0]" "<mod>" "logic [DEC_DIGITS*4-1:0]" "enum_name_declaration" "logic [3:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [BIN_WIDTH-1:0]" "logic" "enum_name_declaration" "state_t" "logic [7:0]" "logic [DEC_DIGITS-1:0]" "logic [BIN_WIDTH-1:0]" "logic [DEC_DIGITS*4-1:0]" "logic" "enum logic[1:0] {\n                 IDLE = 0,\n                 START_BIT = 1,\n                 SEND_DATA = 2,\n                 STOP_BIT = 3\n                 }" "local_parameter_declaration" "local_parameter_declaration" "logic" "logic" "logic" "logic" "logic [7:0]" "logic" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "alu_op" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "enum logic[4:0] {\n                 nop,                                  // no operation\n                 op_lda, op_ldb, op_ldacc, op_ldid,    // external value load\n                 op_mvacc2id, op_mvacc2a, op_mvacc2b,  // internal load\n                 op_add, op_sub, op_shiftl, op_shiftr, // arithmetic operations\n                 op_and, op_or, op_xor,                // logic operations\n                 op_cmpe, op_cmpl, op_cmpg,            // compare operations\n                 op_ascii2bin, op_bin2ascii,           // conversion operations\n                 op_oeacc                              // output enable\n                 }" "<pkg>" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "tri" "wire" "<mod>" "wire" "enum_name_declaration" "enum_name_declaration" "enum   {ASD, ASDF2}" "local_parameter_declaration" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>"))
 ((1782 "fun")
  ("<mod>" "<t>" "<t>" "ucontroller" "tb_program" "tb_clocks" "<mod>" "<t>" "<t>" "logic [7:0]" "<t>" "<t>" "<mod>" "<t>" "<mod>" "<mod>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "local_parameter_declaration" "<t>" "<t>" "logic [11:0]" "<mod>" "<mod>" "<mod>" "<t>" "input logic [7:0]" "bin2bcd" nil "<mod>" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input alu_op" "<t>" "input logic[7:0]" "input alu_op" "local_parameter_declaration" "<t>" "uart" "local_parameter_declaration" "parameter_declaration" "parameter_declaration" "reg" "wire" "reg" "wire" "reg" "wire" "tri1" "text_macro_definition" "FDPE" "LUT2" "wire" "FDPE" "wire" nil "FDPE" nil nil nil nil nil nil "SRL16E" nil nil nil "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" nil nil "input logic [7:0]" nil nil "FDRE" nil nil nil "LUT1" "LUT1" "LUT1" "LUT1" "wire" "wire" "wire" "wire" nil "wire" "LUT2" nil nil nil nil "fifo_generator_0_fifo_generator_top" "fifo_generator_0_builtin_top_v6" "fifo_generator_0_reset_builtin" "<mod>" "fifo_generator_0_fifo_generator_v13_2_3_synth" "<mod>" nil "VCC" nil "GND" nil nil "fifo_generator_0_fifo_generator_v13_2_3_builtin" "<mod>" "<mod>" "fifo_generator_0_builtin_extdepth_v6" "<mod>" "wire" nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil "wire" nil "wire" nil "FIFO18E1" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" "LUT1" "wire" "LUT1" "wire" "LUT1" "wire" nil nil "LUT1" nil nil "fifo_generator_0_builtin_prim_v6" "<mod>" nil nil "wire" "<mod>" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil nil nil nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "fifo_generator_0_fifo_generator_v13_2_3" "<mod>" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "<mod>" "ram" "<mod>" "ram_arbiter" "uart" "<mod>" "dma" "<mod>" "alu" "<mod>" "logic" "logic [7:0]" "cpu" "<mod>" "logic" "logic [7:0]" "enum_name_declaration" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "logic [31:0]" "enum_name_declaration" "logic" "logic" "logic" "logic" "logic [31:0]" "enum_name_declaration" "logic" "local_parameter_declaration" "logic [31:0]" "logic" "logic [7:0]" "fifo_wrapper" "logic [7:0]" "sreg" "<mod>" "logic" "output logic" "output logic" "logic" "uart_rx" "<mod>" "logic" "logic" "output logic" "logic [7:0]" "input logic [7:0]" "uart_tx" "local_parameter_declaration" "local_parameter_declaration" "<mod>" "output logic [7:0]" "logic [7:0]" nil nil nil "local_parameter_declaration" "logic [31:0]" nil "logic" "logic [7:0]" "logic" "bin2bcd" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "<mod>" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "input logic" "enum_name_declaration" "input logic" "input logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum logic {REGS, GP}" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "regs_ram" "<mod>" "logic [7:0]" "logic" "gp_ram" "<mod>" "logic [7:0]" "local_parameter_declaration" "<mod>" "logic" "wire" "logic" "wire" "input logic [7:0]" "wire" "input logic" "wire" "input logic" "wire" "input logic" "wire" "wire" "wire" "fifo_generator_0" "<mod>" "local_parameter_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "output logic" "output logic" "logic" "input logic" "logic" "dma_arbiter" "<mod>" "input logic" "logic" "output logic" "input logic" "logic" "input logic [7:0]" "wire" "wire" "wire" "input logic" "output logic" "logic" "dma_rx" "<mod>" "logic" "output logic" "input logic" "logic" "logic" "input logic" "logic" "logic [7:0]" "logic" "input logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic [7:0]" "logic" "input logic" "dma_tx" "<mod>" "logic [7:0]" "logic" "logic [11:0]" "logic [11:0]" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic" "logic" "<t>" "logic [7:0]" "logic [7:0]" "logic" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "logic [7:0]" "logic" "logic" "local_parameter_declaration" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "<t>" "local_parameter_declaration" "logic [11:0]" "local_parameter_declaration" "<t>" "logic" "<t>" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "<t>" "enum_name_declaration" "logic [11:0]" "input logic [7:0]" "logic" "logic" "<t>" "state_t" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [11:0]" "<mod>" "logic [DEC_DIGITS*4-1:0]" "enum_name_declaration" "logic [3:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [BIN_WIDTH-1:0]" "logic" "enum_name_declaration" "state_t" "logic [7:0]" "logic [DEC_DIGITS-1:0]" "logic [BIN_WIDTH-1:0]" "logic [DEC_DIGITS*4-1:0]" "logic" "enum logic[1:0] {\n                 IDLE = 0,\n                 START_BIT = 1,\n                 SEND_DATA = 2,\n                 STOP_BIT = 3\n                 }" "local_parameter_declaration" "local_parameter_declaration" "logic" "logic" "logic" "logic" "logic [7:0]" "logic" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "alu_op" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "enum logic[4:0] {\n                 nop,                                  // no operation\n                 op_lda, op_ldb, op_ldacc, op_ldid,    // external value load\n                 op_mvacc2id, op_mvacc2a, op_mvacc2b,  // internal load\n                 op_add, op_sub, op_shiftl, op_shiftr, // arithmetic operations\n                 op_and, op_or, op_xor,                // logic operations\n                 op_cmpe, op_cmpl, op_cmpg,            // compare operations\n                 op_ascii2bin, op_bin2ascii,           // conversion operations\n                 op_oeacc                              // output enable\n                 }" "<pkg>" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "tri" "wire" "<mod>" "wire" "enum_name_declaration" "enum_name_declaration" "enum   {ASD, ASDF2}" "local_parameter_declaration" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>"))
 ((4626 "init")
  ("<mod>" "<t>" "<t>" "ucontroller" "tb_program" "tb_clocks" "<mod>" "<t>" "<t>" "logic [7:0]" "<t>" "<t>" "<mod>" "<t>" "<mod>" "<mod>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "local_parameter_declaration" "<t>" "<t>" "logic [11:0]" "<mod>" "<mod>" "<mod>" "<t>" "input logic [7:0]" "bin2bcd" nil "<mod>" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input alu_op" "<t>" "input logic[7:0]" "input alu_op" "local_parameter_declaration" "<t>" "uart" "local_parameter_declaration" "parameter_declaration" "parameter_declaration" "reg" "wire" "reg" "wire" "reg" "wire" "tri1" "text_macro_definition" "FDPE" "LUT2" "wire" "FDPE" "wire" nil "FDPE" nil nil nil nil nil nil "SRL16E" nil nil nil "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" nil nil "input logic [7:0]" nil nil "FDRE" nil nil nil "LUT1" "LUT1" "LUT1" "LUT1" "wire" "wire" "wire" "wire" nil "wire" "LUT2" nil nil nil nil "fifo_generator_0_fifo_generator_top" "fifo_generator_0_builtin_top_v6" "fifo_generator_0_reset_builtin" "<mod>" "fifo_generator_0_fifo_generator_v13_2_3_synth" "<mod>" nil "VCC" nil "GND" nil nil "fifo_generator_0_fifo_generator_v13_2_3_builtin" "<mod>" "<mod>" "fifo_generator_0_builtin_extdepth_v6" "<mod>" "wire" nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil "wire" nil "wire" nil "FIFO18E1" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" "LUT1" "wire" "LUT1" "wire" "LUT1" "wire" nil nil "LUT1" nil nil "fifo_generator_0_builtin_prim_v6" "<mod>" nil nil "wire" "<mod>" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil nil nil nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "fifo_generator_0_fifo_generator_v13_2_3" "<mod>" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "<mod>" "ram" "<mod>" "ram_arbiter" "uart" "<mod>" "dma" "<mod>" "alu" "<mod>" "logic" "logic [7:0]" "cpu" "<mod>" "logic" "logic [7:0]" "enum_name_declaration" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "logic [31:0]" "enum_name_declaration" "logic" "logic" "logic" "logic" "logic [31:0]" "enum_name_declaration" "logic" "local_parameter_declaration" "logic [31:0]" "logic" "logic [7:0]" "fifo_wrapper" "logic [7:0]" "sreg" "<mod>" "logic" "output logic" "output logic" "logic" "uart_rx" "<mod>" "logic" "logic" "output logic" "logic [7:0]" "input logic [7:0]" "uart_tx" "local_parameter_declaration" "local_parameter_declaration" "<mod>" "output logic [7:0]" "logic [7:0]" nil nil nil "local_parameter_declaration" "logic [31:0]" nil "logic" "logic [7:0]" "logic" "bin2bcd" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "<mod>" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "input logic" "enum_name_declaration" "input logic" "input logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum logic {REGS, GP}" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "regs_ram" "<mod>" "logic [7:0]" "logic" "gp_ram" "<mod>" "logic [7:0]" "local_parameter_declaration" "<mod>" "logic" "wire" "logic" "wire" "input logic [7:0]" "wire" "input logic" "wire" "input logic" "wire" "input logic" "wire" "wire" "wire" "fifo_generator_0" "<mod>" "local_parameter_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "output logic" "output logic" "logic" "input logic" "logic" "dma_arbiter" "<mod>" "input logic" "logic" "output logic" "input logic" "logic" "input logic [7:0]" "wire" "wire" "wire" "input logic" "output logic" "logic" "dma_rx" "<mod>" "logic" "output logic" "input logic" "logic" "logic" "input logic" "logic" "logic [7:0]" "logic" "input logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic [7:0]" "logic" "input logic" "dma_tx" "<mod>" "logic [7:0]" "logic" "logic [11:0]" "logic [11:0]" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic" "logic" "<t>" "logic [7:0]" "logic [7:0]" "logic" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "logic [7:0]" "logic" "logic" "local_parameter_declaration" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "<t>" "local_parameter_declaration" "logic [11:0]" "local_parameter_declaration" "<t>" "logic" "<t>" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "<t>" "enum_name_declaration" "logic [11:0]" "input logic [7:0]" "logic" "logic" "<t>" "state_t" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [11:0]" "<mod>" "logic [DEC_DIGITS*4-1:0]" "enum_name_declaration" "logic [3:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [BIN_WIDTH-1:0]" "logic" "enum_name_declaration" "state_t" "logic [7:0]" "logic [DEC_DIGITS-1:0]" "logic [BIN_WIDTH-1:0]" "logic [DEC_DIGITS*4-1:0]" "logic" "enum logic[1:0] {\n                 IDLE = 0,\n                 START_BIT = 1,\n                 SEND_DATA = 2,\n                 STOP_BIT = 3\n                 }" "local_parameter_declaration" "local_parameter_declaration" "logic" "logic" "logic" "logic" "logic [7:0]" "logic" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "alu_op" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "enum logic[4:0] {\n                 nop,                                  // no operation\n                 op_lda, op_ldb, op_ldacc, op_ldid,    // external value load\n                 op_mvacc2id, op_mvacc2a, op_mvacc2b,  // internal load\n                 op_add, op_sub, op_shiftl, op_shiftr, // arithmetic operations\n                 op_and, op_or, op_xor,                // logic operations\n                 op_cmpe, op_cmpl, op_cmpg,            // compare operations\n                 op_ascii2bin, op_bin2ascii,           // conversion operations\n                 op_oeacc                              // output enable\n                 }" "<pkg>" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "tri" "wire" "<mod>" "wire" "enum_name_declaration" "enum_name_declaration" "enum   {ASD, ASDF2}" "local_parameter_declaration" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>"))
 ((point-max "pac")
  ("<mod>" "<t>" "<t>" "ucontroller" "tb_program" "tb_clocks" "<mod>" "<t>" "<t>" "logic [7:0]" "<t>" "<t>" "<mod>" "<t>" "<mod>" "<mod>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "<t>" "local_parameter_declaration" "<t>" "<t>" "logic [11:0]" "<mod>" "<mod>" "<mod>" "<t>" "input logic [7:0]" "bin2bcd" nil "<mod>" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input logic [7:0]" "input logic [7:0]" nil nil "<t>" "input logic [7:0]" "input logic [7:0]" "<t>" "input alu_op" "<t>" "input logic[7:0]" "input alu_op" "local_parameter_declaration" "<t>" "uart" "local_parameter_declaration" "parameter_declaration" "parameter_declaration" "reg" "wire" "reg" "wire" "reg" "wire" "tri1" "text_macro_definition" "FDPE" "LUT2" "wire" "FDPE" "wire" nil "FDPE" nil nil nil nil nil nil "SRL16E" nil nil nil "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" "FDRE" nil nil "input logic [7:0]" nil nil "FDRE" nil nil nil "LUT1" "LUT1" "LUT1" "LUT1" "wire" "wire" "wire" "wire" nil "wire" "LUT2" nil nil nil nil "fifo_generator_0_fifo_generator_top" "fifo_generator_0_builtin_top_v6" "fifo_generator_0_reset_builtin" "<mod>" "fifo_generator_0_fifo_generator_v13_2_3_synth" "<mod>" nil "VCC" nil "GND" nil nil "fifo_generator_0_fifo_generator_v13_2_3_builtin" "<mod>" "<mod>" "fifo_generator_0_builtin_extdepth_v6" "<mod>" "wire" nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil "wire" nil "wire" nil "FIFO18E1" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" "LUT1" "wire" "LUT1" "wire" "LUT1" "wire" nil nil "LUT1" nil nil "fifo_generator_0_builtin_prim_v6" "<mod>" nil nil "wire" "<mod>" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil nil nil nil nil nil nil nil nil nil nil "wire" nil nil "wire" nil nil nil nil nil "wire" nil nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil nil nil nil "wire" nil nil nil nil nil nil nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil nil nil nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil "wire" nil nil "wire" nil nil "wire" nil "wire" nil nil nil "wire" nil "wire" nil "wire" nil "wire" nil "fifo_generator_0_fifo_generator_v13_2_3" "<mod>" nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil "<mod>" "ram" "<mod>" "ram_arbiter" "uart" "<mod>" "dma" "<mod>" "alu" "<mod>" "logic" "logic [7:0]" "cpu" "<mod>" "logic" "logic [7:0]" "enum_name_declaration" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "logic [31:0]" "enum_name_declaration" "logic" "logic" "logic" "logic" "logic [31:0]" "enum_name_declaration" "logic" "local_parameter_declaration" "logic [31:0]" "logic" "logic [7:0]" "fifo_wrapper" "logic [7:0]" "sreg" "<mod>" "logic" "output logic" "output logic" "logic" "uart_rx" "<mod>" "logic" "logic" "output logic" "logic [7:0]" "input logic [7:0]" "uart_tx" "local_parameter_declaration" "local_parameter_declaration" "<mod>" "output logic [7:0]" "logic [7:0]" nil nil nil "local_parameter_declaration" "logic [31:0]" nil "logic" "logic [7:0]" "logic" "bin2bcd" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "<mod>" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "input logic" "enum_name_declaration" "input logic" "input logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum logic {REGS, GP}" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "regs_ram" "<mod>" "logic [7:0]" "logic" "gp_ram" "<mod>" "logic [7:0]" "local_parameter_declaration" "<mod>" "logic" "wire" "logic" "wire" "input logic [7:0]" "wire" "input logic" "wire" "input logic" "wire" "input logic" "wire" "wire" "wire" "fifo_generator_0" "<mod>" "local_parameter_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "output logic" "output logic" "logic" "input logic" "logic" "dma_arbiter" "<mod>" "input logic" "logic" "output logic" "input logic" "logic" "input logic [7:0]" "wire" "wire" "wire" "input logic" "output logic" "logic" "dma_rx" "<mod>" "logic" "output logic" "input logic" "logic" "logic" "input logic" "logic" "logic [7:0]" "logic" "input logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic [7:0]" "logic" "input logic" "dma_tx" "<mod>" "logic [7:0]" "logic" "logic [11:0]" "logic [11:0]" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic" "logic" "<t>" "logic [7:0]" "logic [7:0]" "logic" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "logic [7:0]" "logic" "logic" "local_parameter_declaration" "logic [7:0]" "local_parameter_declaration" "local_parameter_declaration" "<t>" "local_parameter_declaration" "logic [11:0]" "local_parameter_declaration" "<t>" "logic" "<t>" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "<t>" "enum_name_declaration" "logic [11:0]" "input logic [7:0]" "logic" "logic" "<t>" "state_t" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "local_parameter_declaration" "logic [11:0]" "<mod>" "logic [DEC_DIGITS*4-1:0]" "enum_name_declaration" "logic [3:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [BIN_WIDTH-1:0]" "logic" "enum_name_declaration" "state_t" "logic [7:0]" "logic [DEC_DIGITS-1:0]" "logic [BIN_WIDTH-1:0]" "logic [DEC_DIGITS*4-1:0]" "logic" "enum logic[1:0] {\n                 IDLE = 0,\n                 START_BIT = 1,\n                 SEND_DATA = 2,\n                 STOP_BIT = 3\n                 }" "local_parameter_declaration" "local_parameter_declaration" "logic" "logic" "logic" "logic" "logic [7:0]" "logic" "logic" "enum_name_declaration" "enum_name_declaration" "local_parameter_declaration" "local_parameter_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "enum_name_declaration" "logic [7:0]" "enum_name_declaration" "enum_name_declaration" "alu_op" "logic" "logic" "logic" "logic" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic [7:0]" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic" "logic [7:0]" "enum logic[4:0] {\n                 nop,                                  // no operation\n                 op_lda, op_ldb, op_ldacc, op_ldid,    // external value load\n                 op_mvacc2id, op_mvacc2a, op_mvacc2b,  // internal load\n                 op_add, op_sub, op_shiftl, op_shiftr, // arithmetic operations\n                 op_and, op_or, op_xor,                // logic operations\n                 op_cmpe, op_cmpl, op_cmpg,            // compare operations\n                 op_ascii2bin, op_bin2ascii,           // conversion operations\n                 op_oeacc                              // output enable\n                 }" "<pkg>" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "reg" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "wire" "tri" "wire" "<mod>" "wire" "enum_name_declaration" "enum_name_declaration" "enum   {ASD, ASDF2}" "local_parameter_declaration" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>" "<kwd>")))
